<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Shop</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Shop.styles.css" asp-append-version="true" />
    <script src="~/js/app1.css"></script>

</head>
<body>
    <header>
        <div class="bars" id="nav-action">
            <span class="bar"> </span>
        </div>

       
            <nav id="nav">
                <ul>
                    <li class="shape-circle circle-one"><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
                    <li class="shape-circle circle-two"><a asp-area="" asp-controller="Spaceships" asp-action="Index">Spaceship</a></li>
                    <li class="shape-circle circle-three"><a asp-area="" asp-controller="RealEstate" asp-action="Index">Real Estate</a></li>
                    <li class="shape-circle circle-five"><a asp-area="" asp-controller="Kindergartens" asp-action="Index">Kindergarten</a></li>
                    <li class="shape-circle circle-three"><a asp-area="" asp-controller="OpenWeathers" asp-action="Index">Open Weather</a></li>
                    <li class="shape-circle circle-three"><a asp-area="" asp-controller="ChackNorris" asp-action="Index">Chuck Norris</a></li>
                    <li class="shape-circle circle-three"><a asp-area="" asp-controller="coctails" asp-action="Index">Cocktail</a></li>
                    <li class="shape-circle circle-three"><a asp-area="" asp-controller="Acuweather" asp-action="Index">City</a></li>
                    <li class="shape-circle circle-three"><a asp-area="" asp-controller="Email" asp-action="Index">Email</a></li>
                    <li class="shape-circle circle-three"><a asp-area="" asp-controller="ChatHub" asp-action="Index">Chat hub</a></li>
                 @*     <li class="shape-circle circle-three"><a asp-area="" asp-controller="Pages" asp-action="Index">Registration</a></li> *@
                
                
                </ul>
                <ul class="navbar-nav ml-auto">         
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Accounts" asp-action="Register">Register</a>
                    </li>

                <li class="nav-item">
                    <a class="nav-link text-white" asp-controller="Accounts" asp-action="Login">Login</a>
                </li>

                </ul>
         @*    <partial name="_LoginPartial" /> *@
            </nav>
        <div class="gradient"></div>
        <canvas id="canvas"></canvas>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; @DateTime.Now.Year  Product of education  <a asp-area="" asp-controller="Home" asp-action="Privacy"></a>
        </div>


    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
@* 
<script>
    // Setting up the Variables
    var bars = document.getElementById("nav-action");
    var nav = document.getElementById("nav");


    //setting up the listener
    bars.addEventListener("click", barClicked, false);


    //setting up the clicked Effect
    function barClicked() {
        bars.classList.toggle('active');
        nav.classList.toggle('visible');
    }
</script> *@

<script>
    const canvas = document.getElementById("canvas");
    const ctx = canvas.getContext("2d");

    const navbar = document.querySelector("nav");

    canvas.width = navbar.clientWidth;
    canvas.height = navbar.clientHeight;

    class Particle {
        constructor(x, y, speedX, speedY) {
            this.x = x;
            this.y = y;
            this.speedX = speedX;
            this.speedY = speedY;
        }

        update() {
            this.x += this.speedX;
            this.y += this.speedY;

            if (this.x > canvas.width || this.x < 0) {
                this.speedX = -this.speedX;
            }
            if (this.y > canvas.height || this.y < 0) {
                this.speedY = -this.speedY;
            }
        }

        draw() {
            ctx.beginPath();
            ctx.arc(this.x, this.y, 2, 0, Math.PI * 2);
            ctx.fillStyle = "aqua";
            ctx.fill();
        }
    }

    const particles = [];
    const numParticles = 25;

    for (let i = 0; i < numParticles; i++) {
        const x = Math.random() * canvas.width;
        const y = Math.random() * canvas.height;
        const speedX = (Math.random() - 0.5) * 1.2;
        const speedY = (Math.random() - 0.5) * 1.2;
        particles.push(new Particle(x, y, speedX, speedY));
    }

    function animate() {
        requestAnimationFrame(animate);
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        for (const particle of particles) {
            particle.update();
            particle.draw();
        }

        for (let i = 0; i < particles.length; i++) {
            for (let j = i + 1; j < particles.length; j++) {
                const dx = particles[i].x - particles[j].x;
                const dy = particles[i].y - particles[j].y;
                const distance = Math.sqrt(dx * dx + dy * dy);

                if (distance < 110) {
                    ctx.strokeStyle = "rgba(157, 212, 215, 0.2)";
                    ctx.lineWidth = 1;
                    ctx.beginPath();
                    ctx.moveTo(particles[i].x, particles[i].y);
                    ctx.lineTo(particles[j].x, particles[j].y);
                    ctx.stroke();
                }
            }
        }
    }

    animate();
</script>
